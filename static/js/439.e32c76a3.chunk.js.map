{"version":3,"file":"static/js/439.e32c76a3.chunk.js","mappings":"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","sources":["component/hoot-form/FormProvider.js","component/hoot-form/RHFTextField.js","component/Settings/ProfileForm.js","component/profile/Profile.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\n// form\r\nimport { FormProvider as Form } from 'react-hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nFormProvider.propTypes = {\r\n  children: PropTypes.node,\r\n  methods: PropTypes.object,\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default function FormProvider({ children, onSubmit, methods }) {\r\n  return (\r\n    <Form {...methods}>\r\n      <form onSubmit={onSubmit}>{children}</form>\r\n    </Form>\r\n  );\r\n}","import PropTypes from \"prop-types\";\r\n// form\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\n// @mui\r\nimport { TextField } from \"@mui/material\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFTextField.propTypes = {\r\n  name: PropTypes.string,\r\n  helperText: PropTypes.node,\r\n};\r\n\r\nexport default function RHFTextField({ name, helperText, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <TextField\r\n          {...field}\r\n          fullWidth\r\n          value={\r\n            typeof field.value === \"number\" && field.value === 0\r\n              ? \"\"\r\n              : field.value\r\n          }\r\n          error={!!error}\r\n          helperText={error ? error?.message : helperText}\r\n          {...other}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { useCallback } from \"react\";\r\nimport * as Yup from \"yup\";\r\n// form\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n// @mui\r\nimport { Stack, Alert } from \"@mui/material\";\r\nimport FormProvider from \"../hoot-form/FormProvider\";\r\nimport RHFTextField from \"../hoot-form/RHFTextField\";\r\n// components\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProfileForm() {\r\n  const LoginSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Email is required\"),\r\n\r\n    about: Yup.string().required(\"About is required\"),\r\n    avatarUrl: Yup.string().required(\"Avatar is required\").nullable(true),\r\n  });\r\n\r\n  const defaultValues = {\r\n    name: \"\",\r\n    about: \"\",\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    setValue,\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles(0);\r\n      const newFile = Object.assign(file, {\r\n        preview: URL.createObjectURL(file),\r\n      });\r\n      if (file) {\r\n        setValue(\"avatarUrl\", newFile, { shouldValidate: true });\r\n      }\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      console.log(\"DATA\", data);\r\n    } catch (error) {\r\n      console.error(error);\r\n      reset();\r\n      setError(\"afterSubmit\", {\r\n        ...error,\r\n        message: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3}>\r\n        {!!errors.afterSubmit && (\r\n          <Alert severity=\"error\">{errors.afterSubmit.message}</Alert>\r\n        )}\r\n\r\n        <RHFTextField\r\n          name=\"name\"\r\n          label=\"Email address\"\r\n          helperText={\"This name is visible to Public\"}\r\n        />\r\n\r\n        <RHFTextField\r\n          multiline\r\n          rows={3}\r\n          maxRows={5}\r\n          name=\"about\"\r\n          label=\"About\"\r\n        />\r\n      </Stack>\r\n      <div className=\"flex justify-end p-4\">\r\n      <button className=\"btn btn-outline text-accent bg-none  hover:bg-accent hover:text-white hover:border-none\"  type=\"submit\" >Save</button>\r\n      </div>\r\n    </FormProvider>\r\n  );\r\n}\r\n","import { IconButton } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { MdOutlineArrowBackIos } from \"react-icons/md\";\r\nimport ProfileForm from \"../Settings/ProfileForm\";\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <>\r\n      <div className=\"flex w-full h-full max-h-screen\">\r\n        <div className=\"h-full max-h-screen bg-[#F8FAFF] w-[380px] shadow-[0px 0px 2px rgba(0, 0, 0, 0.25)]\">\r\n          <div className=\"flex flex-col p-4 gap-5\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <IconButton>\r\n                <MdOutlineArrowBackIos color=\"#4B4B4B\"/>\r\n              </IconButton>\r\n              <span className=\"font-bold text-2xl\">Profile</span>\r\n            </div>\r\n\r\n            {/* Profile Form */}\r\n            <ProfileForm />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["FormProvider","_ref","children","onSubmit","methods","_jsx","Form","_objectSpread","RHFTextField","name","helperText","other","_objectWithoutProperties","_excluded","control","useFormContext","Controller","render","_ref2","field","error","fieldState","TextField","fullWidth","value","message","ProfileForm","LoginSchema","Yup","shape","required","about","avatarUrl","nullable","useForm","resolver","yupResolver","defaultValues","reset","watch","setValue","setError","handleSubmit","errors","formState","useCallback","acceptedFiles","file","newFile","Object","assign","preview","URL","createObjectURL","shouldValidate","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","console","log","stop","_x","apply","arguments","_jsxs","Stack","spacing","afterSubmit","Alert","severity","label","multiline","rows","maxRows","className","type","_Fragment","IconButton","MdOutlineArrowBackIos","color"],"sourceRoot":""}